@{
    ViewBag.MenuHead = "Management";
    ViewBag.Controller = "Time";
    ViewBag.Action = "Details";
    ViewBag.Title = "Time Details";
    var Lessons = ViewBag.Lessons;
}
@using GWOTimetable.Models;
@model Workspace
<div class="row">
    <div class="col-md-6">
        <div class="card card-info card-outline">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h3 class="card-title"><i class="fas fa-calendar"></i> &ensp;Day Settings</h3>

                <div class="ml-auto">
                    <button type="button" id="saveTimeButton" class="btn btn-outline-success btn-sm ml-1">
                        <i class="fas fa-save"></i>&nbsp; Save
                    </button>
                </div>
            </div>

            <div class="card-body">
                <div class="row">
                    <div class="form-group col-md-6">
                        <label>Day of Week</label>
                    </div>

                    <div class="form-group col-md-3">
                        <label>Short Name</label>
                    </div>

                    <div class="form-group col-md-3">
                        <label>Lesson Count</label>
                    </div>
                </div>
                @foreach (var day in Model.Days)
                {
                    <div class="row">
                        <div class="form-group col-md-6">
                            <input type="text" class="form-control" value="@day.DayOfWeek" disabled>
                        </div>

                        <div class="form-group col-md-3">
                            <input type="text" class="form-control" value="@day.ShortName" disabled>
                        </div>

                        <div class="form-group col-md-3">
                            <select class="form-control select2bs4 select2-hidden-accessible" id="lessonCount" disabled>

                                @for (int s = 0; s <= Model.Lessons.Count(); s++)
                                {
                                    <option value=@s>@s</option>
                                }
                            </select>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card card-info card-outline">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h3 class="card-title"><i class="fas fa-clock"></i> &ensp;Lesson Time Settings</h3>

                <div class="ml-auto">
                    <button type="button" id="saveTimeButton" class="btn btn-outline-success btn-sm ml-1">
                        <i class="fas fa-save"></i>&nbsp; Save
                    </button>
                </div>
            </div>

            <div class="card-body">


                <div class="row">
                    <div class="form-group col-md-2">
                        <label>Number</label>
                    </div>

                    <div class="form-group col-md-4">
                        <label>Starting Time</label>
                    </div>

                    <div class="form-group col-md-4">
                        <label>Ending Time</label>
                    </div>
                </div>
                @foreach (var lesson in Model.Lessons)
                {
                    <div class="row">
                        <div class="form-group col-md-2">
                            <input type="text" class="form-control" value="@lesson.LessonNumber" disabled>
                        </div>

                        <div class="form-group col-md-4">
                            <input type="text" class="form-control" value="@lesson.StartTime" disabled>
                        </div>

                        <div class="form-group col-md-4">
                            <input type="text" class="form-control" value="@lesson.EndTime" disabled>
                        </div>

                        @if (lesson.LessonNumber == Model.Lessons.Count)
                        {
                            <div class="form-group col-md-2">
                                <button class="btn btn-danger delete-lesson-button" data-lesson-id=@lesson.LessonId
                                    data-lesson-number=@lesson.LessonNumber data-starting-time=@lesson.StartTime
                                    data-ending-time=@lesson.EndTime data-toggle="modal" data-target="#deleteLessonModal">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        }
                    </div>
                }

                <div class="row">
                    <div class="form-group col-md-2">
                        <input type="text" class="form-control" value="@(@Model.Lessons.Count + 1)" disabled>
                    </div>

                    <div class="form-group col-md-4">
                        <div class="bootstrap-timepicker">
                            <div class="form-group">
                                <div class="input-group date" id="starttimepicker" data-target-input="nearest">
                                    <input type="text" class="form-control datetimepicker-input"
                                        data-target="#starttimepicker" />
                                    <div class="input-group-append" data-target="#starttimepicker"
                                        data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="far fa-clock"></i></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group col-md-4">
                        <div class="bootstrap-timepicker">
                            <div class="form-group">
                                <div class="input-group date" id="endtimepicker" data-target-input="nearest">
                                    <input type="text" class="form-control datetimepicker-input"
                                        data-target="#endtimepicker" />
                                    <div class="input-group-append" data-target="#endtimepicker"
                                        data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="far fa-clock"></i></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="form-group col-md-2">
                        <button class="btn btn-success" id="addLessonButton">
                            <i class="fas fa-plus"></i>
                        </button>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteLessonModal" tabindex="-1" role="dialog" aria-labelledby="deleteLessonModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteLessonModalLabel"><i class="fas fa-exclamation-circle"></i>&nbsp;
                    Delete
                    Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <dt>Are you sure you want to delete this lesson?</dt>
                <dd>All settings related to this lesson will be deleted.</dd>
                <br>
                <dl class="row">
                    <dt class="col-sm-4">Lesson Number</dt>
                    <dd class="col-sm-8" id="deleteLessonNumber"></dd>
                    <dt class="col-sm-4">Starting Time</dt>
                    <dd class="col-sm-8" id="deleteStartingTime"></dd>
                    <dt class="col-sm-4">Ending Time</dt>
                    <dd class="col-sm-8" id="deleteEndingTime"></dd>
                </dl>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" data-lesson-id=""
                    id="confirmDeleteLessonButton">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            $.ajax({
                url: '@Url.Action("GetWorkspaceSelectList", "Workspace")',
                // Doğru URL'yi yaz
                type: 'GET',
                success: function (response) {

                    $('#selectedWorkspace').html(response);
                    $('#workspace').attr('disabled', 'disabled');
                },
                error: function (xhr, status, error) {
                    $('#selectedWorkspace').html("Error loading partial view:");
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('#addLessonButton').click(function () {
                var lessonData = {
                    StartTime: $('#starttimepicker input').val(), // Eğer starttimepicker da aynı mantıkla kullanıldıysa
                    EndTime: $('#endtimepicker input').val() // Doğru input değerini almak için
                };


                $.ajax({
                    url: '@Url.Action("AddLesson", "Time")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(lessonData),
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: "Lesson added successfully.",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = "An unknown error occurred. Please try again.";
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }

                        Swal.fire({
                            toast: true,
                            icon: 'error',
                            title: errorMessage,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 3000
                        });
                    }
                });

            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('.delete-lesson-button').on('click', function () {
                const lessonId = $(this).data('lesson-id');
                $('#deleteLessonNumber').text($(this).data('lesson-number'));
                $('#deleteStartingTime').text($(this).data('starting-time'));
                $('#deleteEndingTime').text($(this).data('ending-time'));

                $('#confirmDeleteLessonButton').data('lesson-id', lessonId);
            });

            $('#confirmDeleteLessonButton').on('click', function () {

                const lessonId = parseInt($(this).data('lesson-id'));

                const lessonData = {
                    LessonId: lessonId
                };

                $.ajax({
                    url: '@Url.Action("DeleteLesson", "Time")',
                    type: 'DELETE',
                    contentType: 'application/json',
                    data: JSON.stringify(lessonData),
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: "Lesson deleted successfully.",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = "An unknown error occurred. Please try again."; // varsayılan
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }

                        Swal.fire({
                            toast: true,
                            icon: 'error',
                            title: errorMessage,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 2000
                        });
                    }
                });
            });
        });

    </script>

    <script>
        $(function () {
            $('#starttimepicker').datetimepicker({
                format: 'HH:mm'
            })

            $('#endtimepicker').datetimepicker({
                format: 'HH:mm'
            })

        })
    </script>
}