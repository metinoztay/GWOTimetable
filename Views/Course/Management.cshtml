@{
    ViewBag.MenuHead = "Management";
    ViewBag.Controller = "Course";
    ViewBag.Action = "List";
    ViewBag.Title = "Course Management";
    int i = 1;
}

@model IEnumerable<Course>

    <div class="card card-info card-outline">
        <div class="card-header d-flex align-items-center">
            <h3 class="card-title"><i class="fas fa-book"></i> &ensp; Course List</h3>

            <button type="button" class="btn btn-outline-success btn-sm ml-auto" data-toggle="modal"
                data-target="#addCourseModal">
                <i class="fas fa-plus"></i>&nbsp; Add Course
            </button>
        </div>

        <div class="card-body p-0">
            @if (Model.Count() > 0)
{
            <table class="table table-striped projects" id="courseList">
                <thead>
                    <tr>
                        <th style="">No</th>
                        <th style="">Course Code</th>
                        <th>Course Name</th>
                        <th class="text-center">Weekly Hour</th>
                        <th class="text-center">Placement Format</th>
                        <th>Description</th>
                        <th class="text-center">Created At</th>
                        <th class="text-center">Updated At</th>
                        <th class="text-center" style="">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var course in Model)
                    {
                        <tr>
                            <td style="width: 1%" class="text-right">@i</td>
                            <td style="width: 10%">@course.CourseCode</td>
                            <td style="width: 20%">@course.CourseName</td>
                            <td class="text-center" style="width: 8%">@course.WeeklyHourCount</td>
                            <td class="text-center" style="width: 8%">@course.PlacementFormat</td>
                            <td style="width: 20%" >
                                <span title="@(course.Description ?? "No description.")">
                                    @if (string.IsNullOrEmpty(course.Description))
                                    {
                                        @("No description.")
                                    }
                                    else if (course.Description.Length > 60)
                                    {
                                        @(course.Description.Substring(0, 60) + "...")
                                    }
                                    else
                                    {
                                        @(course.Description)
                                    }
                                </span>
                            </td>
                            <td style="width: 9%" class="text-center">@course.CreatedAt</td>
                            <td style="width: 9%" class="text-center">@(course.UpdatedAt.HasValue ? course.UpdatedAt.ToString()
                        : "Not updated yet.")</td>
                            <td class="text-center" style="width: 15%">
                                <a asp-controller="Course" asp-action="Details" asp-route-courseId="@course.CourseId"
                                    class="btn btn-info btn-sm">
                                    <i class="fas fa-eye"></i>&ensp; Details
                                </a>
                                <button class="btn btn-danger btn-sm delete-course-button" data-course-id="@course.CourseId"
                                    data-course-code="@course.CourseCode" data-course-name="@course.CourseName"
                                    data-toggle="modal" data-target="#deleteCourseModal">
                                    <i class="fas fa-trash"></i>
                                </button>

                            </td>

                        </tr>
                        i++;
                    }
                </tbody>
            </table>
}
        </div>
    </div>




<!-- Add Course Modal -->
<div class="modal fade" id="addCourseModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-success">
                <h5 class="modal-title"><i class="fas fa-circle-plus"></i>&nbsp; Add New Course</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="form-group ">
                    <label>Workspace</label>
                    <div id="selectedWorkspace"> </div>
                </div>
                <div class=" row">

                    <div class="form-group col-md-6">
                        <label>Course Code </label>
                        <input type="text" class="form-control" id="newCourseCode" maxlength="15">
                    </div>

                    <div class="form-group col-md-6">
                        <label>Course Name </label>
                        <input type="text" class="form-control" id="newCourseName" maxlength="100">
                    </div>

                    <div class="form-group col-md-6">
                        <label>Weekly Hour Count</label>

                        <select class="form-control select2bs4 select2-hidden-accessible" id="newWeeklyHourCount">
                            <option value="0">Select Weekly Hour Count</option>
                            @for (int s = 1; s <= 10; s++)
                            {
                                <option value=@s>@s Hour</option>
                            }
                        </select>
                    </div>

                    <div class="form-group col-md-6">
                        <label>Placement Format</label>

                        <select class="form-control select2bs4 select2-hidden-accessible" id="newPlacementFormat">

                        </select>
                    </div>

                    <div class="form-group col-md-12">
                        <label>Description</label>
                        <textarea class="form-control" id="newCourseDescription" rows="4" maxlength="250"></textarea>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success" id="saveNewCourseButton">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteCourseModal" tabindex="-1" role="dialog" aria-labelledby="deleteCourseModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteCourseModalLabel"><i class="fas fa-exclamation-circle"></i>&nbsp;
                    Delete
                    Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <dt>Are you sure you want to delete this course?</dt>
                <br>
                <dl class="row">
                    <dt class="col-sm-4">Course Code</dt>
                    <dd class="col-sm-8" id="deleteCourseCode"></dd>
                    <dt class="col-sm-4">Course Name</dt>
                    <dd class="col-sm-8" id="deleteCourseName"></dd>

                </dl>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" data-course-id=""
                    id="confirmDeleteCourseButton">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>

        $(document).ready(function () {
            $.ajax({
                url: '@Url.Action("GetWorkspaceSelectList", "Workspace")',
                // DoÄŸru URL'yi yaz
                type: 'GET',
                success: function (response) {

                    $('#selectedWorkspace').html(response);

                    $('#workspace').attr('disabled', 'disabled');
                },
                error: function (xhr, status, error) {
                    $('#selectedWorkspace').html("Error loading partial view:");
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('#saveNewCourseButton').click(function () {
                var courseData = {
                    CourseCode: $('#newCourseCode').val(),
                    CourseName: $('#newCourseName').val(),
                    WeeklyHourCount: parseInt($('#newWeeklyHourCount').val()),
                    PlacementFormat: $('#newPlacementFormat').val(),
                    Description: $('#newCourseDescription').val()
                };

                $.ajax({
                    url: '@Url.Action("NewCourse", "Course")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(courseData),
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: "Course added successfully.",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = "An unknown error occurred. Please try again."; // varsayÄ±lan
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }

                        Swal.fire({
                            toast: true,
                            icon: 'error',
                            title: errorMessage,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 2000
                        });
                    }
                });

            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('#newWeeklyHourCount').on('change', function () {
                var weeklyHourValue = parseInt($(this).val()); 

                const placementFormat = document.getElementById('newPlacementFormat');

                placementFormat.innerHTML = '';

                const option = document.createElement('option');
                option.value = "";
                option.text = "Select Placement Format";
                placementFormat.appendChild(option);

                if (!isNaN(weeklyHourValue)) {
                    const variations = getVariations(weeklyHourValue);

                    variations.forEach(variation => {
                        const option = document.createElement('option');
                        option.value = variation;
                        option.textContent = variation;
                        placementFormat.appendChild(option);
                    });
                }
            });
        });


        function getVariations(number) {
            if (number === 0) {
                return [''];
            }

            const results = [];
            for (let i = 1; i <= number; i++) {
                const subVariations = getVariations(number - i);

                subVariations.forEach(variation => {
                    results.push(i + (variation === '' ? '' : ',' + variation));
                });
            }

            for (let index = 0; index < results.length; index++) {
                const v = results[index].split(",").map(x => parseInt(x));
                for (let j = 0; j < v.length - 1; j++) {
                    if (v[j] < v[j + 1]) {
                        results.splice(index, 1);
                        index--;
                        break;
                    }
                }
            }

            results.reverse();
            return results;
        }
    </script>

    <script>
        $(document).ready(function () {
            $('.delete-course-button').on('click', function () {
                const courseId = $(this).data('course-id');
                $('#deleteCourseCode').text($(this).data('course-code'));
                $('#deleteCourseName').text($(this).data('course-name'));

                $('#confirmDeleteCourseButton').data('course-id', courseId);
            });
            $('#confirmDeleteCourseButton').on('click', function () {

                const courseId = parseInt($(this).data('course-id'));

                const courseData = {
                    CourseId: courseId
                };

                $.ajax({
                    url: '@Url.Action("DeleteCourse", "Course")',
                    type: 'DELETE',
                    contentType: 'application/json',
                    data: JSON.stringify(courseData),
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: "Course deleted successfully.",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = "An unknown error occurred. Please try again."; // varsayÄ±lan
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }

                        Swal.fire({
                            toast: true,
                            icon: 'error',
                            title: errorMessage,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 2000
                        });
                    }
                });
            });
        });

    </script>

}