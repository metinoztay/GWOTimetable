@{
    ViewBag.MenuHead = "Management";
    ViewBag.Controller = "Educator";
    ViewBag.Action = "Details";
    ViewBag.Title = "Educator Details";
}
@using GWOTimetable.Models;
@using System.Security.Claims
@model Educator
<div class="card card-info card-outline">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h3 class="card-title"><i class="fas fa-circle-info"></i> &ensp;Educator Details</h3>

        <div class="ml-auto">
            <button class="btn btn-outline-danger btn-sm delete-educator-button" data-educator-id="@Model.EducatorId"
                data-shortname="@Model.ShortName" data-firstname="@Model.FirstName" data-lastname="@Model.LastName"
                data-toggle="modal" data-target="#deleteEducatorModal" id="deleteEducatorButton" hidden>
                <i class="fas fa-trash"></i>&nbsp; Delete
            </button>
            <button type="button" id="saveEducatorButton" class="btn btn-outline-success btn-sm ml-1" hidden>
                <i class="fas fa-save"></i>&nbsp; Save
            </button>
            <button type="button" id="closeEditButton" class="btn btn-outline-info btn-sm ml-1" hidden>
                <i class="fas fa-xmark"></i>&nbsp; Close
            </button>
            <button type="button" id="editEducatorButton" class="btn btn-outline-info btn-sm ml-1">
                <i class="fas fa-edit"></i>&nbsp; Edit
            </button>

        </div>
    </div>

    <div class="card-body">
        <div class="form-group ">
            <label>Workspace</label>
            <select class="form-control select2bs4 select2-hidden-accessible" disabled>
                <option value="0">@User.FindFirstValue("WorkspaceName")</option>
            </select>
        </div>
        <div class=" row">

            <div class="form-group col-md-2">
                <label>Short Name </label>
                <input type="text" class="form-control" value="@Model.ShortName" id="educatorShortName" maxlength="10"
                    disabled>
            </div>

            <div class="form-group col-md-5">
                <label>Created At </label>
                <input type="text" class="form-control" value="@Model.CreatedAt" disabled>
            </div>

            <div class="form-group col-md-5">
                <label>Updated At </label>
                <input type="text" class="form-control"
                    value="@(Model.UpdatedAt.HasValue ? Model.UpdatedAt.ToString() : "Not updated yet.")" disabled>
            </div>

            <div class="form-group col-md-2">
                <label>Title </label>
                <input type="text" class="form-control" value="@Model.Title" id="educatorTitle" maxlength="20" disabled>
            </div>

            <div class="form-group col-md-5">
                <label>First Name </label>
                <input type="text" class="form-control" value="@Model.FirstName" id="educatorFirstName" maxlength="50"
                    disabled>
            </div>

            <div class="form-group col-md-5">
                <label>Last Name </label>
                <input type="text" class="form-control" value="@Model.LastName" id="educatorLastName" maxlength="50"
                    disabled>
            </div>

            <div class="form-group col-md-12">
                <label>Email </label>
                <input type="text" class="form-control" value="@Model.Email" id="educatorEmail" maxlength="100"
                    disabled>
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="deleteEducatorModal" tabindex="-1" role="dialog" aria-labelledby="deleteEducatorModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteEducatorModalLabel"><i class="fas fa-exclamation-circle"></i>&nbsp;
                    Delete
                    Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <dt>Are you sure you want to delete this educator?</dt>
                <dd>All settings related to this educator will be deleted.</dd>
                <br>
                <dl class="row">
                    <dt class="col-sm-4">Short Name</dt>
                    <dd class="col-sm-8" id="deleteEducatorShortName"></dd>
                    <dt class="col-sm-4">First Name</dt>
                    <dd class="col-sm-8" id="deleteEducatorFirstName"></dd>
                    <dt class="col-sm-4">Last Name</dt>
                    <dd class="col-sm-8" id="deleteEducatorLastName"></dd>

                </dl>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" data-educator-id=""
                    id="confirmDeleteEducatorButton">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            $('.delete-educator-button').on('click', function () {
                const educatorId = $(this).data('educator-id');
                $('#deleteEducatorShortName').text($(this).data('shortname'));
                $('#deleteEducatorFirstName').text($(this).data('firstname'));
                $('#deleteEducatorLastName').text($(this).data('lastname'));
                $('#confirmDeleteEducatorButton').data('educator-id', educatorId);
            });
            $('#confirmDeleteEducatorButton').on('click', function () {

                const educatorId = parseInt($(this).data('educator-id'));

                const educatorData = {
                    EducatorId: educatorId
                };

                $.ajax({
                    url: '@Url.Action("DeleteEducator", "Educator")',
                    type: 'DELETE',
                    contentType: 'application/json',
                    data: JSON.stringify(educatorData),
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: "Educator deleted successfully.",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = "An unknown error occurred. Please try again."; // varsayılan
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }

                        Swal.fire({
                            toast: true,
                            icon: 'error',
                            title: errorMessage,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 3000
                        });
                    }
                });
            });
        });

    </script>


    <script>
        $(document).ready(function () {
            $('#editEducatorButton').click(function () {
                $('#educatorShortName,#educatorFirstName,#educatorLastName,#educatorTitle,#educatorEmail').removeAttr('disabled');
                $('#saveEducatorButton,#deleteEducatorButton,#closeEditButton').removeAttr('hidden');
                $('#editEducatorButton').attr('hidden', true);
                $('#weeklyHourCount').change();
            });


            $('#closeEditButton').click(function () {
                $('#educatorShortName,#educatorFirstName,#educatorLastName,#educatorTitle,#educatorEmail').attr('disabled', true);
                $('#saveEducatorButton,#deleteEducatorButton,#closeEditButton').attr('hidden', true);
                $('#editEducatorButton').removeAttr('hidden');
            });

            $('#saveEducatorButton').click(function () {
                var educatorData = {
                    EducatorId: parseInt('@Model.EducatorId'),
                    ShortName: $('#educatorShortName').val(),
                    FirstName: $('#educatorFirstName').val(),
                    LastName: $('#educatorLastName').val(),
                    Title: $('#educatorTitle').val(),
                    Email: $('#educatorEmail').val()
                };


                $.ajax({
                    url: '@Url.Action("UpdateEducator", "Educator")',
                    type: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(educatorData),
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: "Educator updated successfully.",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = "An unknown error occurred. Please try again."; // varsayılan
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }

                        Swal.fire({
                            toast: true,
                            icon: 'error',
                            title: errorMessage,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 3000
                        });
                    }
                });
            });

        });

    </script>

}