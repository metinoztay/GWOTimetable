@{
    ViewBag.MenuHead = "Management";
    ViewBag.Controller = "Class";
    ViewBag.Action = "Details";
    ViewBag.Title = "Class Details";
    int number = 1;
}

@using GWOTimetable.Models;
@using System.Security.Claims
@model Class
<div class="card card-info card-outline">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h3 class="card-title"><i class="fas fa-circle-info"></i> &ensp;Class Details</h3>

        <div class="ml-auto">
            <button class="btn btn-outline-danger btn-sm delete-class-button" data-class-id="@Model.ClassId"
                data-class-name="@Model.ClassName" data-class-desc="@Model.Description" data-toggle="modal"
                data-target="#deleteClassModal" id="deleteClassButton" hidden>
                <i class="fas fa-trash"></i>&nbsp; Delete
            </button>
            <button type="button" id="saveClassButton" class="btn btn-outline-success btn-sm ml-1" hidden>
                <i class="fas fa-save"></i>&nbsp; Save
                using System.Security.Claims;
            </button>
            <button type="button" id="closeEditButton" class="btn btn-outline-info btn-sm ml-1" hidden>
                <i class="fas fa-xmark"></i>&nbsp; Close
            </button>
            <button type="button" id="editClassButton" class="btn btn-outline-info btn-sm ml-1">
                <i class="fas fa-edit"></i>&nbsp; Edit
            </button>

        </div>
    </div>

    <div class="card-body">
        <div class="form-group ">
            <label>Workspace</label>
            <select class="form-control select2bs4 select2-hidden-accessible" disabled>
                <option value="0">@User.FindFirstValue("WorkspaceName")</option>
            </select>
        </div>
        <div class=" row">
            <div class="form-group col-md-6">
                <label>Class Name </label>
                <input type="text" class="form-control" value="@Model.ClassName" id="className" maxlength="100"
                    disabled>
            </div>


            <div class="form-group col-md-3">
                <label>Created At </label>
                <input type="text" class="form-control" value="@Model.CreatedAt" disabled>
            </div>


            <div class="form-group col-md-3">
                <label>Updated At </label>
                <input type="text" class="form-control"
                    value="@(Model.UpdatedAt.HasValue ? Model.UpdatedAt.ToString() : "Not updated yet.")" disabled>
            </div>

        </div>
        <div class=" row">
            <div class="form-group col-md-12">
                <label>Description</label>
                <textarea class="form-control" id="classDescription" rows="2" maxlength="250" disabled>
                    @if (string.IsNullOrEmpty(Model.Description))
                    {
                        @("No description.".Trim())
                    }
                    else
                    {
                        @(Model.Description.Trim())
                    }
                </textarea>
            </div>
        </div>
    </div>
</div>


<div class="card card-success card-outline mt-4">
    <div class="card-header d-flex align-items-center">
        <h3 class="card-title"><i class="fas fa-book"></i>&nbsp; Courses</h3>

        <button type="button" class="btn btn-outline-success btn-sm ml-auto" data-toggle="modal"
            data-target="#addCourseModal">
            <i class="fas fa-plus"></i>&nbsp; Add Course
        </button>

    </div>
    <div class="card-body p-0">
        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <th>Number</th>
                    <th>Course Code</th>
                    <th>Course</th>
                    <th>Educator</th>
                    <th>Classroom</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var c in Model.ClassCourses)
                {
                    <tr>
                        <td>
                            @number;
                            @number++;
                        </td>
                        <td>@c.Course.CourseCode</td>
                        <td>@c.Course.CourseName</td>
                        <td>@c.Educator.Title @c.Educator.FirstName @c.Educator.LastName</td>
                        <td>@c.ClassRoom.ClassroomName</td>
                        <td>
                            <button class="btn btn-danger btn-sm delete-course-button" data-course-id="" data-toggle="modal"
                                data-target="#deleteCourseModal">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    </div>
</div>


<div class="modal fade" id="addCourseModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success">
                <h5 class="modal-title"><i class="fas fa-circle-plus"></i>&nbsp; Add New Course</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="form-group ">
                    <label>Workspace</label>
                    <select class="form-control select2bs4 select2-hidden-accessible" disabled>
                        <option value="0">@User.FindFirstValue("WorkspaceName")</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Course</label>
                    <select class="form-control select2bs4 select2-hidden-accessible" id="courseSelect">
                        <option value="0">Select Weekly Hour Count</option>
                        @for (int s = 1; s <= 10; s++)
                        {
                            <option value=@s>@s Hour</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label>Educator</label>

                    <select class="form-control select2bs4 select2-hidden-accessible" id="educatorSelect">
                        <option value="0">Select Weekly Hour Count</option>
                        @for (int s = 1; s <= 10; s++)
                        {
                            <option value=@s>@s Hour</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label>Classroom</label>
                    <select class="form-control select2bs4 select2-hidden-accessible" id="classroomSelect">
                        <option value="0">Select Weekly Hour Count</option>
                        @for (int s = 1; s <= 10; s++)
                        {
                            <option value=@s>@s Hour</option>
                        }
                    </select>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success" id="saveNewCourseButton">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="deleteClassModal" tabindex="-1" role="dialog" aria-labelledby="deleteClassModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteClassModalLabel"><i class="fas fa-exclamation-circle"></i>&nbsp;
                    Delete
                    Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <dt>Are you sure you want to delete this class?</dt>
                <dd>All settings related to this class will be deleted.</dd>
                <br>
                <dl class="row">
                    <dt class="col-sm-4">Class Name</dt>
                    <dd class="col-sm-8" id="deleteClassName"></dd>
                    <dt class="col-sm-4">Class Description</dt>
                    <dd class="col-sm-8" id="deleteClassDesc"></dd>

                </dl>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" data-class-id=""
                    id="confirmDeleteClassButton">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            $('.delete-class-button').on('click', function () {
                const classId = $(this).data('class-id');
                $('#deleteClassName').text($(this).data('class-name'));
                $('#deleteClassDesc').text($(this).data('class-desc'));

                $('#confirmDeleteClassButton').data('class-id', classId);
            });
            $('#confirmDeleteClassButton').on('click', function () {

                const classId = parseInt($(this).data('class-id'));

                const classData = {
                    ClassId: classId
                };

                $.ajax({
                    url: '@Url.Action("DeleteClass", "Class")',
                    type: 'DELETE',
                    contentType: 'application/json',
                    data: JSON.stringify(classData),
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: "Class deleted successfully.",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = "An unknown error occurred. Please try again."; // varsayılan
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }

                        Swal.fire({
                            toast: true,
                            icon: 'error',
                            title: errorMessage,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 3000
                        });
                    }
                });
            });
        });

    </script>

    <script>
        $(document).ready(function () {
            $('#editClassButton').click(function () {
                $('#classCode,#className,#classDescription').removeAttr('disabled');
                $('#saveClassButton,#deleteClassButton,#closeEditButton').removeAttr('hidden');
                $('#editClassButton').attr('hidden', true);
            });


            $('#closeEditButton').click(function () {
                $('#classCode,#className,#classDescription').attr('disabled', true);
                $('#saveClassButton,#deleteClassButton,#closeEditButton').attr('hidden', true);
                $('#editClassButton').removeAttr('hidden');
            });

            $('#saveClassButton').click(function () {
                var classData = {
                    ClassId: parseInt('@Model.ClassId'),
                    ClassName: $('#className').val(),
                    Description: $('#classDescription').val()
                };


                $.ajax({
                    url: '@Url.Action("UpdateClass", "Class")',
                    type: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(classData),
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: "Class updated successfully.",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = "An unknown error occurred. Please try again."; // varsayılan
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }

                        Swal.fire({
                            toast: true,
                            icon: 'error',
                            title: errorMessage,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 3000
                        });
                    }
                });
            });

        });

    </script>
}