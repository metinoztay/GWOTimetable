@{
    ViewBag.MenuHead = "Management";
    ViewBag.Controller = "Class";
    ViewBag.Action = "Details";
    ViewBag.Title = "Class Details";
    int number = 1;
    Class classModel = Model.Classes.First();
}

@using GWOTimetable.Models;
@using System.Security.Claims
@model Workspace
<div class="card card-info card-outline">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h3 class="card-title"><i class="fas fa-circle-info"></i> &ensp;Class Details</h3>

        <div class="ml-auto">
            <button class="btn btn-outline-danger btn-sm delete-class-button" data-class-id="@classModel.ClassId"
                data-class-name="@classModel.ClassName" data-class-desc="@classModel.Description" data-toggle="modal"
                data-target="#deleteClassModal" id="deleteClassButton" hidden>
                <i class="fas fa-trash"></i>&nbsp; Delete
            </button>
            <button type="button" id="saveClassButton" class="btn btn-outline-success btn-sm ml-1" hidden>
                <i class="fas fa-save"></i>&nbsp; Save
            </button>
            <button type="button" id="closeEditButton" class="btn btn-outline-info btn-sm ml-1" hidden>
                <i class="fas fa-xmark"></i>&nbsp; Close
            </button>
            <button type="button" id="editClassButton" class="btn btn-outline-info btn-sm ml-1">
                <i class="fas fa-edit"></i>&nbsp; Edit
            </button>

        </div>
    </div>

    <div class="card-body">
        <div class="form-group ">
            <label>Workspace</label>
            <select class="form-control select2bs4 select2-hidden-accessible" disabled style="width: 100%;">
                <option value="0">@User.FindFirstValue("WorkspaceName")</option>
            </select>
        </div>
        <div class=" row">
            <div class="form-group col-md-6">
                <label>Class Name </label>
                <input type="text" class="form-control" value="@classModel.ClassName" id="className" maxlength="100"
                    disabled>
            </div>


            <div class="form-group col-md-3">
                <label>Created At </label>
                <input type="text" class="form-control" value="@classModel.CreatedAt" disabled>
            </div>


            <div class="form-group col-md-3">
                <label>Updated At </label>
                <input type="text" class="form-control"
                    value="@(classModel.UpdatedAt.HasValue ? classModel.UpdatedAt.ToString() : "Not updated yet.")"
                    disabled>
            </div>

        </div>
        <div class=" row">
            <div class="form-group col-md-12">
                <label>Description</label>
                <textarea class="form-control" id="classDescription" rows="2" maxlength="250" disabled>
                    @if (string.IsNullOrEmpty(Model.Description))
                    {
                                        @("No description.".Trim())
                    }
                    else
                    {
                                        @(classModel.Description.Trim())
                    }
                </textarea>
            </div>
        </div>
    </div>
</div>


<div class="card card-success card-outline mt-4">
    <div class="card-header d-flex align-items-center">
        <h3 class="card-title"><i class="fas fa-book"></i>&nbsp; Courses</h3>

        <button type="button" class="btn btn-outline-success btn-sm ml-auto" data-toggle="modal"
            data-target="#addCourseModal">
            <i class="fas fa-plus"></i>&nbsp; Add Course
        </button>

    </div>
    <div class="card-body p-0 table-responsive">


        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <th>Number</th>
                    <th>Course Code</th>
                    <th>Course</th>
                    <th>Educator</th>
                    <th>Classroom</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var c in classModel.ClassCourses)
                {
                    <tr>
                        <td>
                            @number

                        </td>
                        <td>@c.Course.CourseCode</td>
                        <td>@c.Course.CourseName</td>
                        <td>@c.Educator.Title @c.Educator.FirstName @c.Educator.LastName</td>
                        <td>@c.Classroom.ClassroomName</td>
                        <td>
                            <button class="btn btn-info btn-sm update-course-button" data-classcourse-id="@c.ClassCourseId"
                                data-course-id="@c.Course.CourseId" data-educator-id="@c.Educator.EducatorId"
                                data-classroom-id="@c.Classroom.ClassroomId" data-toggle="modal"
                                data-target="#updateCourseModal">
                                <i class="fas fa-edit"></i>
                            </button>

                            <button class="btn btn-danger btn-sm delete-course-button" data-course-id="@c.ClassCourseId"
                                data-course-code="@c.Course.CourseCode" data-course-name="@c.Course.CourseName"
                                data-educator-name="@c.Educator.Title @c.Educator.FirstName @c.Educator.LastName"
                                data-classroom="@c.Classroom.ClassroomName" data-toggle="modal"
                                data-target="#deleteCourseModal">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                    number++;
                }
            </tbody>

        </table>


    </div>


    <div class="modal fade" id="addCourseModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-success">
                    <h5 class="modal-title"><i class="fas fa-circle-plus"></i>&nbsp; Add New Course</h5>
                    <button type="button" class="close text-white" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="form-group ">
                        <label>Workspace</label>
                        <select class="form-control select2bs4 select2-hidden-accessible" style="width: 100%;"
                            tabindex="-1" aria-hidden="true" disabled>
                            <option value="0">@User.FindFirstValue("WorkspaceName")</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Class</label>
                        <select class="form-control select2bs4 select2-hidden-accessible" id="classSelect" disabled>
                            <option value="@classModel.ClassId">@classModel.ClassName</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Course</label>
                        <select class="form-control select2bs4 select2-hidden-accessible" id="courseSelect">
                            <option value="0">Select Course</option>
                            @foreach (var course in Model.Courses)
                            {
                                <option value="@course.CourseId">(@course.CourseCode) @course.CourseName</option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Educator</label>

                        <select class="form-control select2bs4 select2-hidden-accessible" id="educatorSelect">
                            <option value="0">Select Educator</option>
                            @foreach (var educator in Model.Educators)
                            {
                                <option value="@educator.EducatorId">@educator.Title @educator.FirstName @educator.LastName
                                </option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Classroom</label>
                        <select class="form-control select2bs4 select2-hidden-accessible" id="classroomSelect">
                            <option value="0">Select Classroom</option>
                            @foreach (var classroom in Model.Classrooms)
                            {
                                <option value="@classroom.ClassroomId">@classroom.ClassroomName</option>
                            }
                        </select>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-success" id="saveNewCourseButton">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="updateCourseModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <h5 class="modal-title"><i class="fas fa-edit"></i>&nbsp; Update Course</h5>
                    <button type="button" class="close text-white" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="form-group ">
                        <label>Workspace</label>
                        <select class="form-control select2bs4 select2-hidden-accessible" style="width: 100%;"
                            tabindex="-1" aria-hidden="true" disabled>
                            <option value="0">@User.FindFirstValue("WorkspaceName")</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Class</label>
                        <select class="form-control select2bs4 select2-hidden-accessible" id="updateclassSelect"
                            disabled>
                            <option value="@classModel.ClassId">@classModel.ClassName</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Course</label>
                        <select class="form-control select2bs4 select2-hidden-accessible" id="updatecourseSelect">
                            <option value="0">Select Course</option>
                            @foreach (var course in Model.Courses)
                            {
                                <option value="@course.CourseId">(@course.CourseCode) @course.CourseName</option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Educator</label>

                        <select class="form-control select2bs4 select2-hidden-accessible" id="updateeducatorSelect">
                            <option value="0">Select Educator</option>
                            @foreach (var educator in Model.Educators)
                            {
                                <option value="@educator.EducatorId">@educator.Title @educator.FirstName @educator.LastName
                                </option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Classroom</label>
                        <select class="form-control select2bs4 select2-hidden-accessible" id="updateclassroomSelect">
                            <option value="0">Select Classroom</option>
                            @foreach (var classroom in Model.Classrooms)
                            {
                                <option value="@classroom.ClassroomId">@classroom.ClassroomName</option>
                            }
                        </select>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-success" id="confirmUpdateCourseButton"
                            data-classcourse-id="">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteClassModal" tabindex="-1" role="dialog" aria-labelledby="deleteClassModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteClassModalLabel"><i class="fas fa-exclamation-circle"></i>&nbsp;
                        Delete
                        Confirmation</h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <dt>Are you sure you want to delete this class?</dt>
                    <dd>All settings related to this class will be deleted.</dd>
                    <br>
                    <dl class="row">
                        <dt class="col-sm-4">Class Name</dt>
                        <dd class="col-sm-8" id="deleteClassName"></dd>
                        <dt class="col-sm-4">Class Description</dt>
                        <dd class="col-sm-8" id="deleteClassDesc"></dd>

                    </dl>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" data-class-id=""
                        id="confirmDeleteClassButton">Delete</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="deleteCourseModal" tabindex="-1" role="dialog" aria-labelledby="deleteCourseModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteCourseModalLabel"><i class="fas fa-exclamation-circle"></i>&nbsp;
                        Delete
                        Confirmation</h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <dt>Are you sure you want to delete this course?</dt>
                    <dd>All settings related to this course will be deleted.</dd>
                    <br>
                    <dl class="row">
                        <dt class="col-sm-4">Course Code</dt>
                        <dd class="col-sm-8" id="deleteCourseCode"></dd>
                        <dt class="col-sm-4">Course Name</dt>
                        <dd class="col-sm-8" id="deleteCourseName"></dd>
                        <dt class="col-sm-4">Educator Name</dt>
                        <dd class="col-sm-8" id="deleteCourseEducatorName"></dd>
                        <dt class="col-sm-4">Classroom</dt>
                        <dd class="col-sm-8" id="deleteCourseClassroom"></dd>

                    </dl>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" data-classcourse-id=""
                        id="confirmDeleteCourseButton">Delete</button>
                </div>
            </div>
        </div>
    </div>

@section Scripts {

        <script>
            $(document).ready(function () {
                $('.select2').select2({
                }).on('select2:unselecting', function (e) {
                    $(this).val(null).trigger('change');
                });
            });
        </script>

        <script>
            $(document).ready(function () {
                $('.delete-class-button').on('click', function () {
                    const classId = $(this).data('class-id');
                    $('#deleteClassName').text($(this).data('class-name'));
                    $('#deleteClassDesc').text($(this).data('class-desc'));

                    $('#confirmDeleteClassButton').data('class-id', classId);
                });
                $('#confirmDeleteClassButton').on('click', function () {

                    const classId = parseInt($(this).data('class-id'));

                    const classData = {
                        ClassId: classId
                    };

                    $.ajax({
                        url: '@Url.Action("DeleteClass", "Class")',
                        type: 'DELETE',
                        contentType: 'application/json',
                        data: JSON.stringify(classData),
                        success: function (response) {
                            Swal.fire({
                                icon: 'success',
                                title: "Class deleted successfully.",
                                showConfirmButton: false,
                                timer: 2000
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function (xhr, status, error) {
                            var errorMessage = "An unknown error occurred. Please try again."; // varsayılan
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                errorMessage = xhr.responseJSON.message;
                            }

                            Swal.fire({
                                toast: true,
                                icon: 'error',
                                title: errorMessage,
                                position: 'top',
                                showConfirmButton: false,
                                timer: 3000
                            });
                        }
                    });
                });
            });

        </script>

        <script>
            $(document).ready(function () {
                $('.update-course-button').on('click', function () {
                    const classcourseId = $(this).data('classcourse-id');
                    $('#updateeducatorSelect').val($(this).data('educator-id')).trigger('change');
                    $('#updateclassSelect').val(@classModel.ClassId).trigger('change');
                    $('#updatecourseSelect').val($(this).data('course-id')).trigger('change');
                    $('#updateclassroomSelect').val($(this).data('classroom-id')).trigger('change');

                    $('#confirmUpdateCourseButton').data('classcourse-id', classcourseId);
                });
                $('#confirmUpdateCourseButton').on('click', function () {

                    var courseData = {
                        ClassCourseId: parseInt($(this).data('classcourse-id')),
                        ClassId: @classModel.ClassId,
                        CourseId: parseInt($('#updatecourseSelect').val()),
                        ClassroomId: parseInt($('#updateclassroomSelect').val()),
                        EducatorId: parseInt($('#updateeducatorSelect').val())
                    };

                    $.ajax({
                        url: '@Url.Action("UpdateCourse", "ClassCourse")',
                        type: 'PUT',
                        contentType: 'application/json',
                        data: JSON.stringify(courseData),
                        success: function (response) {
                            Swal.fire({
                                icon: 'success',
                                title: "Course updated successfully.",
                                showConfirmButton: false,
                                timer: 2000
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function (xhr, status, error) {
                            var errorMessage = "An unknown error occurred. Please try again."; // varsayılan
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                errorMessage = xhr.responseJSON.message;
                            }

                            Swal.fire({
                                toast: true,
                                icon: 'error',
                                title: errorMessage,
                                position: 'top',
                                showConfirmButton: false,
                                timer: 3000
                            });
                        }
                    });
                });
            });

        </script>

        <script>
            $(document).ready(function () {
                $('#editClassButton').click(function () {
                    $('#classCode,#className,#classDescription').removeAttr('disabled');
                    $('#saveClassButton,#deleteClassButton,#closeEditButton').removeAttr('hidden');
                    $('#editClassButton').attr('hidden', true);
                });


                $('#closeEditButton').click(function () {
                    $('#classCode,#className,#classDescription').attr('disabled', true);
                    $('#saveClassButton,#deleteClassButton,#closeEditButton').attr('hidden', true);
                    $('#editClassButton').removeAttr('hidden');
                });

                $('#saveClassButton').click(function () {
                    var classData = {
                        ClassId: parseInt('@classModel.ClassId'),
                        ClassName: $('#className').val(),
                        Description: $('#classDescription').val()
                    };


                    $.ajax({
                        url: '@Url.Action("UpdateClass", "Class")',
                        type: 'PUT',
                        contentType: 'application/json',
                        data: JSON.stringify(classData),
                        success: function (response) {
                            Swal.fire({
                                icon: 'success',
                                title: "Class updated successfully.",
                                showConfirmButton: false,
                                timer: 2000
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function (xhr, status, error) {
                            var errorMessage = "An unknown error occurred. Please try again."; // varsayılan
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                errorMessage = xhr.responseJSON.message;
                            }

                            Swal.fire({
                                toast: true,
                                icon: 'error',
                                title: errorMessage,
                                position: 'top',
                                showConfirmButton: false,
                                timer: 3000
                            });
                        }
                    });
                });

            });
        </script>

        <script>
            $(document).ready(function () {
                $('#saveNewCourseButton').click(function () {
                    var courseData = {
                        ClassId: parseInt($('#classSelect').val()),
                        CourseId: parseInt($('#courseSelect').val()),
                        ClassroomId: parseInt($('#classroomSelect').val()),
                        EducatorId: parseInt($('#educatorSelect').val())
                    };

                    $.ajax({
                        url: '@Url.Action("NewCourse", "ClassCourse")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(courseData),
                        success: function (response) {
                            Swal.fire({
                                icon: 'success',
                                title: "Course added successfully.",
                                showConfirmButton: false,
                                timer: 2000
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function (xhr, status, error) {
                            var errorMessage = "An unknown error occurred. Please try again."; // varsayılan
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                errorMessage = xhr.responseJSON.message;
                            }

                            Swal.fire({
                                toast: true,
                                icon: 'error',
                                title: errorMessage,
                                position: 'top',
                                showConfirmButton: false,
                                timer: 3000
                            });
                        }
                    });

                });
            });
        </script>

        <script>
            $(document).ready(function () {
                $('.delete-course-button').on('click', function () {
                    const courseId = $(this).data('course-id');
                    $('#deleteCourseCode').text($(this).data('course-code'));
                    $('#deleteCourseName').text($(this).data('course-name'));
                    $('#deleteCourseEducatorName').text($(this).data('educator-name'));
                    $('#deleteCourseClassroom').text($(this).data('classroom'));

                    $('#confirmDeleteCourseButton').data('course-id', courseId);


                });
                $('#confirmDeleteCourseButton').on('click', function () {

                    const courseId = parseInt($(this).data('course-id'));

                    const courseData = {
                        ClassCourseId: courseId
                    };

                    $.ajax({
                        url: '@Url.Action("DeleteCourse", "ClassCourse")',
                        type: 'DELETE',
                        contentType: 'application/json',
                        data: JSON.stringify(courseData),
                        success: function (response) {
                            Swal.fire({
                                icon: 'success',
                                title: "Course deleted successfully.",
                                showConfirmButton: false,
                                timer: 2000
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function (xhr, status, error) {
                            var errorMessage = "An unknown error occurred. Please try again."; // varsayılan
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                errorMessage = xhr.responseJSON.message;
                            }

                            Swal.fire({
                                toast: true,
                                icon: 'error',
                                title: errorMessage,
                                position: 'top',
                                showConfirmButton: false,
                                timer: 3000
                            });
                        }
                    });
                });
            });

        </script>
}