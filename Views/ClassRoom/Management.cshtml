@{
    ViewBag.MenuHead = "Management";
    ViewBag.Controller = "Classroom";
    ViewBag.Action = "List";
    ViewBag.Title = "Classroom Management";
    int i = 1;
}

@model IEnumerable<Classroom>

    <div class="card card-info card-outline">
        <div class="card-header d-flex align-items-center">
            <h3 class="card-title"><i class="fas fa-university"></i> &ensp; Classroom List</h3>

            <button type="button" class="btn btn-outline-success btn-sm ml-auto" data-toggle="modal"
                data-target="#addClassroomModal">
                <i class="fas fa-plus"></i>&nbsp; Add Classroom
            </button>
        </div>

        <div class="card-body p-0">
            @if (Model.Count() > 0)
{
            <table class="table table-striped projects" id="classroomList">
                <thead>
                    <tr>
                        <th style="">No</th>
                        <th>Classroom Name</th>
                        <th>Description</th>
                        <th class="text-center">Created At</th>
                        <th class="text-center">Updated At</th>
                        <th class="text-center" style="">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var c in Model)
                    {
                        <tr>
                            <td style="width: 1%" class="text-right">@i</td>
                            <td style="width: 20%">@c.ClassroomName</td>
                            <td style="width: 20%" >
                                <span title="@(c.Description ?? "No description.")">
                                    @if (string.IsNullOrEmpty(c.Description))
                                    {
                                        @("No description.")
                                    }
                                    else if (c.Description.Length > 60)
                                    {
                                        @(c.Description.Substring(0, 60) + "...")
                                    }
                                    else
                                    {
                                        @(c.Description)
                                    }
                                </span>
                            </td>
                            <td style="width: 9%" class="text-center">@c.CreatedAt</td>
                            <td style="width: 9%" class="text-center">@(c.UpdatedAt.HasValue ? c.UpdatedAt.ToString()
                        : "Not updated yet.")</td>
                            <td class="text-center" style="width: 15%">
                                <a asp-controller="Classroom" asp-action="Details" asp-route-classroomId="@c.ClassroomId"
                                    class="btn btn-info btn-sm">
                                    <i class="fas fa-eye"></i>&ensp; Details
                                </a>
                                <button class="btn btn-danger btn-sm delete-classroom-button" data-classroom-id="@c.ClassroomId"
                                    data-classroom-name="@c.ClassroomName" data-classroom-desc="@c.Description"
                                    data-toggle="modal" data-target="#deleteClassroomModal">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </td>

                        </tr>
                        i++;
                    }
                </tbody>
            </table>
}
        </div>
    </div>



<div class="modal fade" id="addClassroomModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success">
                <h5 class="modal-title"><i class="fas fa-circle-plus"></i>&nbsp; Add New Classroom</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="form-group ">
                    <label>Workspace</label>
                    <div id="selectedWorkspace"> </div>
                </div>

                <div class="form-group">
                        <label>Classroom Name </label>
                        <input type="text" class="form-control" id="newClassroomName" maxlength="50">
                </div>

                <div class="form-group">
                        <label>Description</label>
                        <textarea class="form-control" id="newClassroomDescription" rows="4" maxlength="250"></textarea>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success" id="saveNewClassroomButton">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteClassroomModal" tabindex="-1" role="dialog" aria-labelledby="deleteClassroomModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteClassroomModalLabel"><i class="fas fa-exclamation-circle"></i>&nbsp;
                    Delete
                    Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <dt>Are you sure you want to delete this classroom?</dt>
                <dd>All settings related to this classroom will be deleted.</dd>
                <br>
                <dl class="row">
                    <dt class="col-sm-4">Classroom Name</dt>
                    <dd class="col-sm-8" id="deleteClassroomName"></dd>
                    <dt class="col-sm-4">Classroom Description</dt>
                    <dd class="col-sm-8" id="deleteClassroomDesc"></dd>

                </dl>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" data-classroom-id=""
                    id="confirmDeleteClassroomButton">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>

        $(document).ready(function () {
            $.ajax({
                url: '@Url.Action("GetWorkspaceSelectList", "Workspace")',
    
                type: 'GET',
                success: function (response) {

                    $('#selectedWorkspace').html(response);

                    $('#workspace').attr('disabled', 'disabled');
                },
                error: function (xhr, status, error) {
                    $('#selectedWorkspace').html("Error loading partial view:");
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('#saveNewClassroomButton').click(function () {
                var classroomData = {
                    ClassroomName: $('#newClassroomName').val(),
                    Description: $('#newClassroomDescription').val()
                };

                $.ajax({
                    url: '@Url.Action("NewClassroom", "Classroom")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(classroomData),
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: "Classroom added successfully.",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = "An unknown error occurred. Please try again."; // varsayÄ±lan
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }

                        Swal.fire({
                            toast: true,
                            icon: 'error',
                            title: errorMessage,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 3000
                        });
                    }
                });

            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('.delete-classroom-button').on('click', function () {
                const classroomId = $(this).data('classroom-id');
                $('#deleteClassroomName').text($(this).data('classroom-name'));                
                $('#deleteClassroomDesc').text($(this).data('classroom-desc'));

                $('#confirmDeleteClassroomButton').data('classroom-id', classroomId);
            });

            $('#confirmDeleteClassroomButton').on('click', function () {

                const classroomId = parseInt($(this).data('classroom-id'));

                const classroomData = {
                    ClassroomId: classroomId
                };

                $.ajax({
                    url: '@Url.Action("DeleteClassroom", "Classroom")',
                    type: 'DELETE',
                    contentType: 'application/json',
                    data: JSON.stringify(classroomData),
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: "Classroom deleted successfully.",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = "An unknown error occurred. Please try again."; // varsayÄ±lan
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }

                        Swal.fire({
                            toast: true,
                            icon: 'error',
                            title: errorMessage,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 2000
                        });
                    }
                });
            });
        });
    </script>
}