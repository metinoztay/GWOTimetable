@{
    ViewBag.MenuHead = "Management";
    ViewBag.Controller = "Classroom";
    ViewBag.Action = "Details";
    ViewBag.Title = "Classroom Details";
}
@using GWOTimetable.Models;
@model Classroom
<div class="card card-info card-outline">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h3 class="card-title"><i class="fas fa-circle-info"></i> &ensp;Classroom Details</h3>

        <div class="ml-auto">
            <button class="btn btn-outline-danger btn-sm delete-classroom-button" data-classroom-id="@Model.ClassroomId"
                data-classroom-name="@Model.ClassroomName" data-classroom-desc="@Model.Description" data-toggle="modal"
                data-target="#deleteClassroomModal" id="deleteClassroomButton" hidden>
                <i class="fas fa-trash"></i>&nbsp; Delete
            </button>
            <button type="button" id="saveClassroomButton" class="btn btn-outline-success btn-sm ml-1" hidden>
                <i class="fas fa-save"></i>&nbsp; Save
            </button>
            <button type="button" id="closeEditButton" class="btn btn-outline-info btn-sm ml-1" hidden>
                <i class="fas fa-xmark"></i>&nbsp; Close
            </button>
            <button type="button" id="editClassroomButton" class="btn btn-outline-info btn-sm ml-1">
                <i class="fas fa-edit"></i>&nbsp; Edit
            </button>

        </div>
    </div>

    <div class="card-body">
        <div class="form-group ">
            <label>Workspace</label>
            <div id="selectedWorkspace"> </div>
        </div>
        <div class=" row">
            <div class="form-group col-md-6">
                <label>Classroom Name </label>
                <input type="text" class="form-control" value="@Model.ClassroomName" id="classroomName" maxlength="50"
                    disabled>
            </div>


            <div class="form-group col-md-3">
                <label>Created At </label>
                <input type="text" class="form-control" value="@Model.CreatedAt" disabled>
            </div>


            <div class="form-group col-md-3">
                <label>Updated At </label>
                <input type="text" class="form-control"
                    value="@(Model.UpdatedAt.HasValue ? Model.UpdatedAt.ToString() : "Not updated yet.")" disabled>
            </div>

        </div>
        <div class=" row">
            <div class="form-group col-md-12">
                <label>Description</label>
                <textarea class="form-control" id="classroomDescription" rows="2" maxlength="250" disabled>
                    @if (string.IsNullOrEmpty(Model.Description))
                    {
                        @("No description.".Trim())
                    }
                    else
                    {
                        @(Model.Description.Trim())
                    }
                </textarea>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteClassroomModal" tabindex="-1" role="dialog"
    aria-labelledby="deleteClassroomModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteClassroomModalLabel"><i class="fas fa-exclamation-circle"></i>&nbsp;
                    Delete
                    Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <dt>Are you sure you want to delete this classroom?</dt>
                <dd>All settings related to this classroom will be deleted.</dd>
                <br>
                <dl class="row">
                    <dt class="col-sm-4">Classroom Name</dt>
                    <dd class="col-sm-8" id="deleteClassroomName"></dd>
                    <dt class="col-sm-4">Classroom Description</dt>
                    <dd class="col-sm-8" id="deleteClassroomDesc"></dd>

                </dl>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" data-classroom-id=""
                    id="confirmDeleteClassroomButton">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>

        $(document).ready(function () {
            $.ajax({
                url: '@Url.Action("GetWorkspaceSelectList", "Workspace")',
                // Doğru URL'yi yaz
                type: 'GET',
                success: function (response) {

                    $('#selectedWorkspace').html(response);

                    $('#workspace').attr('disabled', 'disabled');
                },
                error: function (xhr, status, error) {
                    $('#selectedWorkspace').html("Error loading partial view:");
                }
            });
        });
    </script>


    <script>
        $(document).ready(function () {
            $('.delete-classroom-button').on('click', function () {
                const classroomId = $(this).data('classroom-id');
                $('#deleteClassroomName').text($(this).data('classroom-name'));
                $('#deleteClassroomDesc').text($(this).data('classroom-desc'));

                $('#confirmDeleteClassroomButton').data('classroom-id', classroomId);
            });
            $('#confirmDeleteClassroomButton').on('click', function () {

                const classroomId = parseInt($(this).data('classroom-id'));

                const classroomData = {
                    ClassroomId: classroomId
                };

                $.ajax({
                    url: '@Url.Action("DeleteClassroom", "Classroom")',
                    type: 'DELETE',
                    contentType: 'application/json',
                    data: JSON.stringify(classroomData),
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: "Classroom deleted successfully.",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = "An unknown error occurred. Please try again."; // varsayılan
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }

                        Swal.fire({
                            toast: true,
                            icon: 'error',
                            title: errorMessage,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 2000
                        });
                    }
                });
            });
        });

    </script>

    <script>
        $(document).ready(function () {
            $('#editClassroomButton').click(function () {
                $('#classroomCode,#classroomName,#classroomDescription').removeAttr('disabled');
                $('#saveClassroomButton,#deleteClassroomButton,#closeEditButton').removeAttr('hidden');
                $('#editClassroomButton').attr('hidden', true);
            });


            $('#closeEditButton').click(function () {
                $('#classroomCode,#classroomName,#classroomDescription').attr('disabled', true);
                $('#saveClassroomButton,#deleteClassroomButton,#closeEditButton').attr('hidden', true);
                $('#editClassroomButton').removeAttr('hidden');
            });

            $('#saveClassroomButton').click(function () {
                var classroomData = {
                    ClassroomId: parseInt('@Model.ClassroomId'),
                    ClassroomName: $('#classroomName').val(),
                    Description: $('#classroomDescription').val()
                };


                $.ajax({
                    url: '@Url.Action("UpdateClassroom", "Classroom")',
                    type: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(classroomData),
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: "Classroom updated successfully.",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = "An unknown error occurred. Please try again."; // varsayılan
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }

                        Swal.fire({
                            toast: true,
                            icon: 'error',
                            title: errorMessage,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 3000
                        });
                    }
                });
            });

        });

    </script>


}