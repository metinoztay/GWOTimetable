@{
    List<Day> days = Model.Days.ToList();
    List<Lesson> lessons = Model.Lessons.ToList();
    List<TimetableConstraint> timetableConstraints = Model.TimetableConstraints.ToList();
    List<EducatorConstraint> educatorConstraints = Model.EducatorConstraints.ToList();
    List<ClassConstraint> classConstraints = Model.ClassConstraints.ToList();
    List<ClassroomConstraint> classroomConstraints = Model.ClassroomConstraints.ToList();
    int maxLessonCount = 0;
    foreach (var day in Model.Days)
    {
        if (day.LessonCount > maxLessonCount)
            maxLessonCount = day.LessonCount;
    }

    bool FindTimetableConstraint(int dayId, int lessonId)
    {
        if (timetableConstraints.Any(tc => tc.DayId == dayId && tc.LessonId == lessonId))
        {
            var constraint = timetableConstraints.FirstOrDefault(tc => tc.DayId == dayId && tc.LessonId == lessonId);
            return true;
        }


        if (classConstraints.Any(c => c.DayId == dayId && c.LessonId == lessonId))
            return true;

        if (classroomConstraints.Any(cr => cr.DayId == dayId && cr.LessonId == lessonId))
            return true;


        return false;
    }

    bool FindEducatorConstraint(int dayId, int lessonId)
    {
        if (educatorConstraints.Any(ec => ec.DayId == dayId && ec.LessonId == lessonId))
            return true;

        return false;
    }

}

@model Workspace
<table class="table table-bordered">

    <tr>
        <td style="width: 8%; text-align: center; vertical-align: middle;"></td>
        @foreach (var day in days)
        {
            if (day.LessonCount > 0)
            {
                <td
                    style="width: calc((100% - 8%) / @days.Count()); height: 50px; text-align: center; background-color: rgb(255, 255, 255);">
                    @day.DayOfWeek</td>
            }

        }
    </tr>

    @for (int i = 0; i < maxLessonCount; i++)
    {
        <tr>
            <td style="width: 8%; text-align: center; vertical-align: middle;">
                @(lessons[i].StartTime)-@(lessons[i].EndTime)</td>

            @for (int j = 0; j < Model.Days.Count(); j++)
            {
                if (days[j].LessonCount > 0)
                {
                    if (i < days[j].LessonCount)
                    {

                        @if (FindTimetableConstraint(days[j].DayId, lessons[i].LessonId))
                        {
                            <td style="width: calc((100% - 8%) / @Model.Days.Count()); height: 70px; background-color: #ADD8E6; cursor: pointer; text-align: center; vertical-align: middle;"
                                ondblclick="RemoveConstraint(event, @days[j].DayId, @lessons[i].LessonId)">
                                @FindTimetableConstraint(days[j].DayId, lessons[i].LessonId).ToString()
                            </td>
                        }
                        else if (FindEducatorConstraint(days[j].DayId, lessons[i].LessonId))
                        {
                            <td style="width: calc((100% - 8%) / @Model.Days.Count()); height: 70px; background-color: #ffe6e6; cursor: pointer; text-align: center; vertical-align: middle;"
                                ondblclick="RemoveConstraint(event, @days[j].DayId, @lessons[i].LessonId)">
                                Closed.
                            </td>
                        }
                        else
                        {
                            <td style="width: calc((100% - 8%) / @Model.Days.Count()); height: 70px; cursor: pointer; text-align: center; vertical-align: middle;"
                                onclick="AddConstraint(event, @days[j].DayId, @lessons[i].LessonId)"
                                onmouseover="this.style.background='#f5f5f5'" onmouseout="this.style.background='white'">
                                @FindTimetableConstraint(days[j].DayId, lessons[i].LessonId).ToString()
                            </td>
                        }

                    }
                    else
                    {
                        <td
                            style="width: calc((100% - 8%) / @Model.Days.Count()); height: 70px; background-color: #ccc; opacity: 0.5; pointer-events: none;">
                        </td>
                    }
                }
            }
        </tr>
    }
</table>